cmake_minimum_required(VERSION 3.15)
project(clink)

option(PROTO2 "PROTOBUF VERSION" OFF)
option(BUILD_SERVICE "BUILD_SERVICE" OFF)
option(BUILD_PLUGIN "BUILD_PLUGIN" ON)
option(BUILD_TEST "BUILD_TEST" OFF)
#是否在动态库中集成依赖包（即将依赖以静态链接打入so）
option(PLUGIN_ARCHIVE "PLUGIN_ARCHIVE" OFF)
if ($ENV{CENTOS6})
    #SET(PROTO2 ON)
    SET(BUILD_SERVICE OFF)
    SET(PLUGIN_ARCHIVE ON)
endif ()
if ($ENV{PROTO2})
    SET(PROTO2 ON)
endif ()
set(CMAKE_CXX_STANDARD 11)
#set(CMAKE_CXX_VISIBILITY_PRESET hidden)

include(cmake/common.cmake)
include_directories(core/include)
include_directories(service/src)

set(OUTPUT_DIR ${CMAKE_SOURCE_DIR}/output)
set(OUTPUT_PLUGIN_DIR ${OUTPUT_DIR}/core)
# SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE) 
# SET(CMAKE_INSTALL_RPATH "\${OUTPUT_DIR}/core/lib") 

if (BUILD_SERVICE)
    add_subdirectory(service)
    add_dependencies(${PROJECT_NAME}_service ${PROJECT_NAME})
endif ()

if (BUILD_PLUGIN)
    add_subdirectory(core)
endif ()

if (BUILD_TEST)
    add_subdirectory(test)
    add_dependencies(test ${PROJECT_NAME})
endif ()
install(DIRECTORY DESTINATION ${CMAKE_BINARY_DIR}/logs)
install(DIRECTORY DESTINATION ${OUTPUT_DIR}/)
if (BUILD_PLUGIN)
    install(TARGETS ${PROJECT_NAME} DESTINATION ${OUTPUT_PLUGIN_DIR}/lib)
    install(DIRECTORY conf/models/ DESTINATION ${OUTPUT_DIR}/models/)
    install(FILES core/processor/clink.h DESTINATION ${OUTPUT_PLUGIN_DIR}/include)
endif ()
if (BUILD_SERVICE)
    install(TARGETS ${PROJECT_NAME}_service DESTINATION ${OUTPUT_DIR})
    install(FILES ${CMAKE_SOURCE_DIR}/conf/models.conf DESTINATION ${OUTPUT_DIR}/conf)
    install(FILES ${CMAKE_SOURCE_DIR}/tools/entrypoint.sh DESTINATION ${OUTPUT_DIR}/shell/)
endif ()
install(DIRECTORY DESTINATION ${OUTPUT_DIR}/logs)
install(DIRECTORY ${OUTPUT_DIR}/ DESTINATION $ENV{CLINK_WORKSPACE}/ USE_SOURCE_PERMISSIONS)
# Build type - Release by default
if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif ()

